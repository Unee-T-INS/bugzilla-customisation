sudo: required
language: generic
services:
  - docker

before_install:
  - pyenv global 2.7.14 # For removing SNIMissingWarning warnings
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  - curl -o $HOME/.local/bin/ecs-cli
    https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest &&
    chmod +x $HOME/.local/bin/ecs-cli

install:
  - sed -i
    "s/header_addl_info.*/header_addl_info = \"$(git describe --always)\"/g"
    ./custom/index.html.tmpl
  - grep header_addl_info ./custom/index.html.tmpl
  - docker build -t uneet/bugzilla-customisation .

after_success:
  - if [[ "$TRAVIS_BRANCH" == master || -z "$TRAVIS_TAG" ]]; then
    docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
    docker push uneet/bugzilla-customisation;
    fi

matrix:
  include:
    - env: DEPLOY=dev
      if: branch = master
      deploy:
        provider: script
        skip_cleanup: true
        script:
          - AWS_ACCESS_KEY_ID=$AWS_812644853088_ID
            AWS_SECRET_ACCESS_KEY=$AWS_812644853088_SECRET
            ./deploy.sh
        on:
          branch: master
    - env: DEPLOY=demo
      if: tag IS present
      deploy:
        provider: script
        skip_cleanup: true
        script:
          - AWS_ACCESS_KEY_ID=$AWS_915001051872_ID
            AWS_SECRET_ACCESS_KEY=$AWS_915001051872_SECRET
            ./deploy.sh -d
        on:
          tags: true
    - env: DEPLOY=prod
      if: tag IS present
      deploy:
        provider: script
        skip_cleanup: true
        script:
          - AWS_ACCESS_KEY_ID=$AWS_192458993663_ID
            AWS_SECRET_ACCESS_KEY=$AWS_192458993663_SECRET
            ./deploy.sh -p
        on:
          tags: true
